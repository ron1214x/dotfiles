"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const unibeautify_1 = require("unibeautify");
const src_1 = require("../../src");
test(`should successfully beautify JavaScript text with assignments vertically aligned`, () => {
    const unibeautify = unibeautify_1.newUnibeautify();
    unibeautify.loadBeautifier(src_1.default);
    const longVar = `veryveryverylong`;
    const text = `function test(){a=1,${longVar}=2}`;
    const beautifierResult = `function test() {\n\ta` +
        " ".repeat(longVar.length) +
        `= 1,\n\t${longVar} = 2\n}`;
    return unibeautify
        .beautify({
        languageName: "JavaScript",
        options: {
            JavaScript: {
                align_assignments: true,
                indent_style: "tab",
                indent_size: 1,
            },
        },
        text,
    })
        .then(results => {
        expect(results).toBe(beautifierResult);
    });
});
test(`should successfully beautify JavaScript text with assignments not vertially aligned`, () => {
    const unibeautify = unibeautify_1.newUnibeautify();
    unibeautify.loadBeautifier(src_1.default);
    const longVar = `veryveryverylong`;
    const text = `function test(){a=1,${longVar}=2}`;
    const beautifierResult = `function test() {\n\ta = 1,\n\t${longVar} = 2\n}`;
    return unibeautify
        .beautify({
        languageName: "JavaScript",
        options: {
            JavaScript: {
                align_assignments: false,
                indent_style: "tab",
                indent_size: 1,
            },
        },
        text,
    })
        .then(results => {
        expect(results).toBe(beautifierResult);
    });
});
//# sourceMappingURL=verticalAlign.spec.js.map